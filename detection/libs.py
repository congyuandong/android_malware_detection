from lib.androguard.core.bytecodes.apk import *
from models import *

def detect(file_path):
    apk = APK(file_path)
    if apk.is_valid_APK():
        apkObj = DP(apk)
        DKNN(apkObj)
        return True
    else:
        return False

def DKNN(apkObj):
    datas = []
    all_field_names = getFieldNames()
    datas.append([int(getattr(apkObj, field_name)) for field_name in all_field_names])
    print datas

def DP(apk):
    all_permissions = get_permissions()
    args = {}
    package = apk.get_package()
    args['package'] = package
    permissions = apk.get_permissions()

    for p in permissions:
        p = p.split('.')[-1]
        if all_permissions.has_key(p):
            args[p] = 1

    apkObjs = DetectionPermission.objects.filter(package__exact = package)
    if not apkObjs:
        apkObj = DetectionPermission(**args)
        apkObj.save()
        return DetectionPermission.objects.get(package = package)
    else:
        apkObj = apkObjs[0]
        return apkObj

def get_permissions():
    all_permission = {}
    permissions = Permission.objects.all()
    for p in permissions:
        all_permission[p.name] = {'protectionLevel':p.protectionLevel, 'permissionGroup':p.permissionGroup}
    return all_permission

def getFieldNames():
        all_field_names = ApkPermission._meta.get_all_field_names()
        all_field_names.remove(u'id')
        all_field_names.remove('package')
        all_field_names.remove('isMalware')
        return all_field_names